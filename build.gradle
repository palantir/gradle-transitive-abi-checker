buildscript {
    repositories {
        mavenCentral() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
        gradlePluginPortal() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
    }

    dependencies {
        classpath 'com.gradle.publish:plugin-publish-plugin:1.3.1'
        classpath 'com.palantir.jakartapackagealignment:jakarta-package-alignment:0.6.0'
        classpath 'com.palantir.baseline:gradle-baseline-java:6.36.0'
        classpath 'com.palantir.gradle.consistentversions:gradle-consistent-versions:2.34.0'
        classpath 'com.palantir.gradle.failure-reports:gradle-failure-reports:1.14.0'
        classpath 'com.palantir.gradle.gitversion:gradle-git-version:3.2.0'
        classpath 'com.palantir.gradle.guide:gradle-guide:1.7.0'
        classpath 'com.palantir.gradle.idea-configuration:gradle-idea-configuration:0.4.0'
        classpath 'com.palantir.gradle.jdks:gradle-jdks:0.67.0'
        classpath 'com.palantir.gradle.jdkslatest:gradle-jdks-latest:0.18.0'
        classpath 'com.palantir.gradle.plugintesting:gradle-plugin-testing:0.6.0'
        classpath 'com.palantir.gradle.externalpublish:gradle-external-publish-plugin:1.19.0'
        classpath 'com.palantir.javaformat:gradle-palantir-java-format:2.68.0'
        classpath 'com.palantir.suppressible-error-prone:gradle-suppressible-error-prone:2.9.0'
        constraints {
            classpath('org.apache.logging.log4j:log4j-core:2.17.1'){ because 'Avoid vulnerable versions of log4j' }
        }
    }
}

apply plugin: 'com.palantir.external-publish'
apply plugin: 'com.palantir.baseline'
apply plugin: 'com.palantir.baseline-java-versions'
apply plugin: 'com.palantir.consistent-versions'
apply plugin: 'com.palantir.failure-reports'
apply plugin: 'com.palantir.git-version'
apply plugin: 'com.palantir.gradle-guide'
apply plugin: 'com.palantir.jdks'
apply plugin: 'com.palantir.jdks.latest'

version System.env.CIRCLE_TAG ?: gitVersion()

allprojects {
    apply plugin: 'com.palantir.baseline-null-away'
    apply plugin: 'com.palantir.java-format'
    apply plugin: 'com.palantir.jakarta-package-alignment'

    group 'com.palantir.gradle.abi-checker'
    version rootProject.version

    repositories {
        mavenCentral() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
    }

    pluginManager.withPlugin('java') {
        tasks.withType(JavaCompile) {
            options.compilerArgs += ['-Werror', '-Xlint:deprecation']
            // Disable safe-logging error prone checks, which don't make sense for gradle plugins and their libraries.
            options.errorprone {
                disable("Slf4jLogsafeArgs")
                disable("PreferSafeLoggableExceptions")
                disable("PreferSafeLogger")
                disable("PreferSafeLoggingPreconditions")
            }
        }

        tasks.check.dependsOn javadoc, checkUnusedDependencies

        tasks.withType(Javadoc) {
            options.addBooleanOption('Werror', true)
        }
    }
}

javaVersions {
    libraryTarget = 17
    distributionTarget = 21
}

jdks {
    daemonTarget = 21
}
